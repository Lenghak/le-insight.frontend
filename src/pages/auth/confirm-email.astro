---
import { buttonVariants } from "@/common/components/ui/button";
import RootLayout from "@/common/layouts/root-layout.astro";
import { cn } from "@/common/lib/utils";
import AuthLayout from "@/modules/auth/layouts/auth-layout.astro";
import { MoveRightIcon } from "lucide-react";

import postConfirmEmail from "@/modules/auth/services/confirm-email-api";
import { getSession } from "auth-astro/server";
import authConfig from "auth:config";
import { AxiosError } from "axios";

export const prerender = false;

const session = await getSession(Astro.request, authConfig);

if (!session?.user) {
  Astro.redirect("/auth/sign-in");
}

const token = Astro.url.searchParams.get("token");

const status = {
  title: "Internal Server Error",
  description:
    "We cannot verify your email right now due to some technical problems on our ends. Please try again later.",
};

if (token) {
  try {
    const res = await postConfirmEmail({
      token,
    });

    if (res.status === 200) {
      (status.title = "Email Verified Successfully"),
        (status.description =
          "Thank you for signing up. Your email has been verified.");
    }
  } catch (error) {
    if (error instanceof AxiosError) {
      if (error.response?.status === 429) {
        status.title = "Too Many Request";
        status.description =
          "You have requested multiple requests in a short period of time. You need to wait for a while in order to request again.";
      } else if (error.response?.status === 400) {
        status.title = "Invalid Token";
        status.description =
          "Your token is invalid or has already expired. You can request for a new token to your email again.";
      }
    }
  }
}

// if the token is verified
// - then show success message
// - else show invalid token
---

<RootLayout title="Le-Insight | Forgot Password">
  <AuthLayout
    title={status.title}
    description={status.description}
    hideSignIn
  >
    <a
      href="/"
      class={cn(
        buttonVariants({
          variant: "default",
          size: "lg",
        }),
        "gap-4 font-bold",
      )}
    >
      <span>Continue</span>
      <MoveRightIcon className="size-5" />
    </a>
  </AuthLayout>
</RootLayout>
